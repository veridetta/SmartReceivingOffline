// Generated by view binder compiler. Do not edit!
package com.vr.smartreceivingnew.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.vr.smartreceivingnew.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemScanBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final LinearLayout btnHapus;

  @NonNull
  public final LinearLayout lyiconEdit;

  @NonNull
  public final TextView tvItemNama;

  @NonNull
  public final TextView tvItemNum;

  @NonNull
  public final TextView tvScanAt;

  private ItemScanBinding(@NonNull CardView rootView, @NonNull LinearLayout btnHapus,
      @NonNull LinearLayout lyiconEdit, @NonNull TextView tvItemNama, @NonNull TextView tvItemNum,
      @NonNull TextView tvScanAt) {
    this.rootView = rootView;
    this.btnHapus = btnHapus;
    this.lyiconEdit = lyiconEdit;
    this.tvItemNama = tvItemNama;
    this.tvItemNum = tvItemNum;
    this.tvScanAt = tvScanAt;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemScanBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemScanBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_scan, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemScanBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnHapus;
      LinearLayout btnHapus = ViewBindings.findChildViewById(rootView, id);
      if (btnHapus == null) {
        break missingId;
      }

      id = R.id.lyiconEdit;
      LinearLayout lyiconEdit = ViewBindings.findChildViewById(rootView, id);
      if (lyiconEdit == null) {
        break missingId;
      }

      id = R.id.tvItemNama;
      TextView tvItemNama = ViewBindings.findChildViewById(rootView, id);
      if (tvItemNama == null) {
        break missingId;
      }

      id = R.id.tvItemNum;
      TextView tvItemNum = ViewBindings.findChildViewById(rootView, id);
      if (tvItemNum == null) {
        break missingId;
      }

      id = R.id.tvScanAt;
      TextView tvScanAt = ViewBindings.findChildViewById(rootView, id);
      if (tvScanAt == null) {
        break missingId;
      }

      return new ItemScanBinding((CardView) rootView, btnHapus, lyiconEdit, tvItemNama, tvItemNum,
          tvScanAt);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
